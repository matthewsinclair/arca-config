name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  MIX_ENV: test
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.18.4'
        otp-version: '28.0'
    
    - name: Restore dependencies cache
      uses: actions/cache@v4
      with:
        path: |
          deps
          _build
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-
    
    - name: Setup environment
      run: |
        # Create config directory and .env file BEFORE any compilation
        mkdir -p config
        
        # Create .env file
        cat > config/.env << 'EOF'
        # CI environment variables
        ARCA_CONFIG_CONFIG_PATH=.arca_config
        ARCA_CONFIG_CONFIG_FILE=config.json
        EOF
        
        # Create required test directories
        mkdir -p ~/.arca_config
        mkdir -p ./.arca_config
        mkdir -p ~/.test_app
        mkdir -p ./.test_app
        
        # Debug output
        echo "=== Environment Setup ==="
        echo "Current directory: $(pwd)"
        echo "Contents of config directory:"
        ls -la config/
        echo "Contents of .env file:"
        cat config/.env
    
    - name: Install dependencies
      run: |
        mix local.rebar --force
        mix local.hex --force
        echo "=== Fetching dependencies ==="
        mix deps.get || (echo "Failed to get deps, retrying..." && mix deps.get)
    
    - name: Compile dependencies
      run: mix deps.compile
    
    - name: Compile
      run: mix compile
    
    - name: Run tests
      run: mix test
    
    - name: Check code formatting
      run: mix format --check-formatted