name: Test

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    name: Test on OTP ${{ matrix.otp }} / Elixir ${{ matrix.elixir }}
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        otp: ['28.0']
        elixir: ['1.18.4']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        otp-version: ${{ matrix.otp }}
        elixir-version: ${{ matrix.elixir }}
    
    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
    
    - name: Install dependencies
      run: mix deps.get
    
    - name: Create config directories
      run: |
        # Create directories that might be needed by tests
        mkdir -p ~/.arca_config
        mkdir -p ./.arca_config
        
    - name: Create .env file if needed
      run: |
        # Check if .env exists, if not create a default one
        if [ ! -f config/.env ]; then
          echo "# Default .env for CI" > config/.env
          echo "ARCA_CONFIG_CONFIG_PATH=.arca_config" >> config/.env
          echo "ARCA_CONFIG_CONFIG_FILE=config.json" >> config/.env
        fi
    
    - name: Run tests
      run: mix test
      
    - name: Run tests with coverage
      run: mix test --cover
      
    - name: Check formatting
      run: mix format --check-formatted
      
    - name: Run Credo static analysis (if available)
      run: |
        if mix help credo >/dev/null 2>&1; then
          mix credo --strict
        else
          echo "Credo not installed, skipping static analysis"
        fi