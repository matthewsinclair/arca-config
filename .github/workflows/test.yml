name: Test

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  MIX_ENV: test

jobs:
  test:
    name: Test on OTP ${{ matrix.otp }} / Elixir ${{ matrix.elixir }}
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        include:
          - otp: '27.0'
            elixir: '1.18.0'
          - otp: '28.0'
            elixir: '1.18.0'
          - otp: '28.0'
            elixir: '1.18.4'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        otp-version: ${{ matrix.otp }}
        elixir-version: ${{ matrix.elixir }}
    
    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: |
          deps
          _build
        key: ${{ runner.os }}-mix-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-${{ matrix.otp }}-${{ matrix.elixir }}-
          ${{ runner.os }}-mix-
    
    - name: Setup environment
      run: |
        # Create all required directories and .env file BEFORE compilation
        mkdir -p config
        mkdir -p ~/.arca_config
        mkdir -p ./.arca_config
        mkdir -p ~/.test_app
        mkdir -p ./.test_app
        
        # Create .env file
        if [ ! -f config/.env ]; then
          echo "# Default .env for CI" > config/.env
          echo "ARCA_CONFIG_CONFIG_PATH=.arca_config" >> config/.env
          echo "ARCA_CONFIG_CONFIG_FILE=config.json" >> config/.env
        fi
        
        echo "Environment setup complete"
    
    - name: Install dependencies
      run: |
        mix local.rebar --force
        mix local.hex --force
        mix deps.get
    
    - name: Compile
      run: |
        # Compile without warnings as errors first to ensure deps compile
        mix compile
        # Then check for warnings in our own code
        mix compile --warnings-as-errors
    
    - name: Run tests
      run: mix test
      
    - name: Check formatting
      run: mix format --check-formatted
      
    # Run coverage only on latest Elixir/OTP combination
    - name: Run tests with coverage
      if: matrix.elixir == '1.18.4' && matrix.otp == '28.0'
      run: |
        # Run with coverage but don't fail on threshold
        mix test --cover || true